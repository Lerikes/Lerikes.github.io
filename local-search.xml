<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>学习笔记</title>
    <link href="/2023/04/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2023/04/10/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="学习笔记1"><a href="#学习笔记1" class="headerlink" title="学习笔记1"></a>学习笔记1</h1><h3 id="1-Flask实现接收和返回json"><a href="#1-Flask实现接收和返回json" class="headerlink" title="1. Flask实现接收和返回json"></a>1. Flask实现接收和返回json</h3><p><em>很久没写markdown快忘完了:imp:</em></p><p>参考的是csdn的一篇<a href="https://blog.csdn.net/weixin_45599402/article/details/116615333">文章</a></p><ol><li><p>利用flask的request.form()接收：</p><pre><code class="hljs">import jsonfrom flask import Flask,requestapp = Flask(__name__)@app.route(&#39;/&#39;)def index():    data = request.form[&#39;data&#39;]  # 获取值    return json.dumps(data, ensure_ascii=False)</code></pre></li><li><p>利用flask的request.get_data()接收：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@app</span>.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/add1&#x27;</span>, methods=[<span class="hljs-string">&#x27;post&#x27;</span>])<br>def <span class="hljs-built_in">Add1</span>():<br>    # raw<br>    get_data = request.<span class="hljs-built_in">get_data</span>()<br>    # 将bytes类型转换为json数据<br>    get_data = json.<span class="hljs-built_in">loads</span>(get_data)<br>    num1 = get_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;num1&#x27;</span>)<br>    num2 = get_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;num2&#x27;</span>)<br>    return json.<span class="hljs-built_in">dumps</span>(<span class="hljs-built_in">int</span>(num1) + <span class="hljs-built_in">int</span>(num2),ensure_ascii=False)<br></code></pre></td></tr></table></figure></li><li><p>利用flask的request.args.to_dict()接收：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@app</span>.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/add2&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>])<br>def <span class="hljs-built_in">Add2</span>():<br>    get_data = request.args.<span class="hljs-built_in">to_dict</span>()# 获取传入的params参数<br>    num1 = get_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;num1&#x27;</span>)<br>    num2 = get_data.<span class="hljs-built_in">get</span>(<span class="hljs-string">&#x27;num2&#x27;</span>)<br>    return json.<span class="hljs-built_in">dumps</span>(<span class="hljs-built_in">int</span>(num2) + <span class="hljs-built_in">int</span>(num1), ensure_ascii=False)<br></code></pre></td></tr></table></figure></li></ol><h3 id="2-python的快速排序"><a href="#2-python的快速排序" class="headerlink" title="2.python的快速排序"></a>2.python的快速排序</h3><p>​刚开始写直接用的sorted函数，然后发现题目是“手写”</p><p>​思想就是确定中间值然后将两边的值和他比大小，代码如下：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">def quicksort(arr):<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(arr) &lt;= <span class="hljs-number">1</span>:<br><span class="hljs-literal">return</span> arr<br><span class="hljs-comment"># 如果只有一个或者为空，则返回自身</span><br>    pivot = arr[<span class="hljs-built_in">len</span>(arr<span class="hljs-comment">)//2]</span><br>    <span class="hljs-comment"># 寻找中间值</span><br>    left = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> arr <span class="hljs-keyword">if</span> x &lt; pivot]<br>    <span class="hljs-keyword">middle</span> = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> arr <span class="hljs-keyword">if</span> x == pivot]<br>    <span class="hljs-literal">right</span> = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> arr <span class="hljs-keyword">if</span> x&gt; pivot]<br>    <span class="hljs-literal">return</span> quicksort(left) + pivot + quicksort(<span class="hljs-literal">right</span>)<br></code></pre></td></tr></table></figure><h3 id="3-postman测试"><a href="#3-postman测试" class="headerlink" title="3.postman测试"></a>3.postman测试</h3><ul><li><p>在flask中添加post请求：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-variable">@app</span>.<span class="hljs-built_in">route</span>(<span class="hljs-string">&#x27;/quicksort&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>])<br></code></pre></td></tr></table></figure></li><li><p>在postman中创建post请求：</p><ol><li><p>打开postman并选择request。</p></li><li><p>选择请求方法为POST（一般默认为GET）。</p></li><li><p>输入URL，我此处的url为 <a href="http://127.0.0.1:5000。">http://127.0.0.1:5000。</a></p></li><li><p>在“body”中选择“raw”，并选择主体类型的格式，此题的要求为JSON。</p></li><li><p>输入JSON形式的数据，如：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br><span class="hljs-string">&quot;array&quot;</span>:[<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>点击send并查看，结果为：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">&#123;<br>    <span class="hljs-string">&quot;sorted_array&quot;</span>: [<br><span class="hljs-built_in">        1,</span><br><span class="hljs-built_in">        3,</span><br><span class="hljs-built_in">        4,</span><br>        <span class="hljs-number">5</span><br>    ]<br>&#125;<br></code></pre></td></tr></table></figure></li></ol></li></ul><p><img src="C:\Users\11372\AppData\Roaming\Typora\typora-user-images\image-20230410185113136.png" alt="image-20230410185113136"></p><h4 id="postman注意事项"><a href="#postman注意事项" class="headerlink" title="postman注意事项"></a>postman注意事项</h4><p>​此处输入的url为快排的<strong>具体</strong>位置<a href="http://127.0.0.1:5000/quicksort">http://127.0.0.1:5000/quicksort</a></p><p>​而不是<a href="http://127.0.0.1:5000！！！~~md这玩意折磨我好久">http://127.0.0.1:5000！！！~~md这玩意折磨我好久</a>~~</p>]]></content>
    
    
    <categories>
      
      <category>learning</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
